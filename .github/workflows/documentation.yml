name: Build and Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'Sources/**'
      - 'Package.swift'
      - '.github/workflows/documentation.yml'
  workflow_dispatch:  # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy-docs:
    runs-on: macos-14
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Setup Swift and verify environment
        run: |
          swift --version
          xcodebuild -version
          
      - name: Cache Swift Package Manager
        uses: actions/cache@v4
        with:
          path: |
            .build
            Package.resolved
          key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift', 'Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
            
      - name: Resolve Swift Package Dependencies
        run: swift package resolve
        
      - name: Build Documentation with DocC
        run: |
          # Method 1: Try using swift package command (preferred)
          if swift package --help | grep -q "generate-documentation"; then
            echo "Using swift package generate-documentation..."
            swift package --allow-writing-to-directory docs \
              generate-documentation --target Objects2XLSX \
              --disable-indexing \
              --transform-for-static-hosting \
              --hosting-base-path Objects2XLSX \
              --output-path docs
          else
            echo "Using xcodebuild docbuild method..."
            # Method 2: Fallback to xcodebuild
            xcodebuild docbuild \
              -scheme Objects2XLSX \
              -destination generic/platform=macOS \
              -derivedDataPath .derivedData
              
            # Find and process the documentation archive
            DOCC_ARCHIVE=$(find .derivedData -name "Objects2XLSX.doccarchive" -type d | head -1)
            
            if [ -n "$DOCC_ARCHIVE" ]; then
              echo "Found DocC archive at: $DOCC_ARCHIVE"
              mkdir -p docs
              
              # Convert DocC archive to static website
              xcrun docc process-archive transform-for-static-hosting \
                "$DOCC_ARCHIVE" \
                --hosting-base-path Objects2XLSX \
                --output-path docs
            else
              echo "Error: Could not find DocC archive"
              exit 1
            fi
          fi
          
      - name: Verify documentation output
        run: |
          echo "Documentation files generated:"
          ls -la docs/
          if [ -f "docs/index.html" ]; then
            echo "✅ Documentation successfully generated"
          else
            echo "❌ Documentation generation failed - no index.html found"
            exit 1
          fi
          
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
        
      - name: Upload documentation to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4